@model ISIC_DATA.Models.DogViewModel
@{
    ViewBag.Title = "Register dogs";
    Layout = "~\\Views\\Shared\\_Layout.cshtml";
}

<h2>Register Dog(s)</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary()

    <fieldset>
        <legend>Litter details</legend>

        <span class="editor-field">
            Date of birth: @Html.TextBoxFor(model => model.Litter.DateOfBirth, new { @class = "datePicker", data_bind = "value: birth" })
            @Html.ValidationMessageFor(model => model.Litter.DateOfBirth)
        </span>

        <div class="editor-label">
            @Html.LabelFor(model => model.Litter.MotherId, "Mother")
        </div>
        <div class="editor-field">
            @Html.DropDownListFor( model => model.Litter.MotherId, (SelectList)ViewBag.MotherId,"Select mother")
            @Html.ValidationMessageFor(model => model.Litter.MotherId)
        </div>

           <div class="editor-label">
            @Html.LabelFor(model => model.Litter.FatherId, "Father")
        </div>
        <div class="editor-field">
            @Html.DropDownListFor( model => model.Litter.FatherId, (SelectList)ViewBag.FatherId, "Select father")
            @Html.ValidationMessageFor(model => model.Litter.FatherId)
        </div>

    </fieldset>
    <fieldset>
        <legend>Dogs</legend>
        @Html.EditorFor(model => model.Dogs)
        <button data-bind="click: addPosition">Add one</button>
        <button data-bind="click: removePosition">Remove one</button>
    </fieldset>
    <input type="Submit" value="SAVE" id="registerform"/>

}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script type="text/javascript">

    $(function () {
        $('#registerform').submit(function () {
            if ($(this).valid()) {
                alert('the form is valid');
            }
            else
                alert('The form was not valid');
        });
    });

    $(function () {
        $.validator.addMethod('date',
        function (value, element) {
            if (this.optional(element)) {
                return true;
            }
            var ok = true;
            try {
                $.datepicker.parseDate('dd/mm/yy', value);
            }
            catch (err) {
                ok = false;
            }
            return ok;
        });
        $(".datePicker").datepicker({ dateFormat: 'dd/mm/yy', changeYear: true });
    });



    function createViewModel() {

        var createPosition = function () {
            return {
                name: ko.observable(),
                reg: ko.observable(),
                sex: ko.observable(),
                colorId: ko.observable()
            };
        };

        var addPosition = function () {
            positions.push(createPosition());
        };

        var removePosition = function () {
            positions.pop();
        };

        var birth = ko.observable();        
        var positions = ko.observableArray([createPosition()]);

        return {
            birth: birth,            
            positions: positions,
            addPosition: addPosition,
            removePosition: removePosition
        };

    }

    $(document).ready(function () {
        var viewModel = createViewModel();
        ko.applyBindings(viewModel);
    });

</script>

