@model PagedList.IPagedList<ISIC_DATA.Models.Dog>
@using PagedList.Mvc; 
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Registered Dogs";
}

<div>
<h5>Here you can choose between filters to find a certain dog or a list of dogs.</h5>
<br />
</div>


<div class="alignSearch">
@using (Html.BeginForm("Index", "Dog", FormMethod.Get))
{
    <p>
        Find by name: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)  
        <input type="submit" value="Search" />
    </p>
}
</div>

<table class="table table-hover">
    <tr>
        <th>
            Reg
        </th>
        <th>
            Name 
        </th>

        <th>
            Father
        </th>
        <th>
            Mother
        </th>        

        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Reg)
        </td>
        <td>
            @Html.ActionLink(item.Name, "Details", new { id=item.Id })
        </td>
        <td>
            @if(item.Litter.Reg_F == null)
            {
                <script type="text/javascript">
                     alert("Model empty");
                </script>
            }
            else
            {
                 
       <script type="text/javascript">
           alert("Model exists");
       </script>
                 
            @Html.DisplayFor(modelItem => item.Litter.Father.Name)
            }
          </td>
         <td>
            @Html.DisplayFor(modelItem => item.Litter.Mother.Name)
        </td>

        <td>
            @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
            @Html.ActionLink("Details", "Details", new { id = item.Id }) |
            @Html.ActionLink("Delete", "Delete", new { id = item.Id })
        </td>
    </tr>
}

</table>

Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager( Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter=ViewBag.CurrentFilter }) )
