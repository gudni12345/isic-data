@model PagedList.IPagedList<ISIC_DATA.Models.Dog>
@using PagedList.Mvc; 
@using BootstrapSupport;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@if (TempData["Success"] != null)
{
    <div class="alert alert-success">  
    <a class="close" data-dismiss="alert">×</a>  
    <strong>Success: </strong>@TempData["Success"].ToString() 
    </div>   
}

@{
  ViewBag.Title = "Registered Dogs";
}



<div>
<h5>Here you can choose between filters to find a certain dog or a list of dogs.</h5>
<br />
</div>


<div class="alignSearch">
@using (Html.BeginForm("Index", "Dog", FormMethod.Get))
{
    <p>
        Find by name or Registration Number: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @class="search-query" })  
        <input type="submit" class="btn btn-primary" value="Search" />
        
    </p>

}
</div>

<table class="table table-striped">
                    <thead>
				    <tr>					    
					    <th>Reg</th>
					    <th>Name</th>
					    <th>Father</th>
					    <th>Mother</th>
                        <th>Born</th>
				    </tr>
			        </thead>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Reg)
        </td>
        <td>
            @Html.ActionLink(item.Name, "Details", new { id=item.Id })
        </td>
        <td>
             
            @Html.DisplayFor(modelItem => item.Litter.Father.Name)
            
          </td>
         <td>
            @Html.DisplayFor(modelItem => item.Litter.Mother.Name)
        </td>
         <td>
            @Html.DisplayFor(modelItem => item.Litter.DateOfBirth) 
        </td>
        

         @if(User.IsInRole("Administrator"))  {
        <td>
            @Html.ActionLink("Edit", "Edit", new { id = item.Id }) 
        </td>
        } 
    </tr>
}

</table>

Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager( Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter=ViewBag.CurrentFilter }) )