@using BootstrapSupport
@model ISIC_DATA.Models.Dog

@{
    ViewBag.Title = "Edit Dog";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

@using (Html.BeginForm("Edit", "Dog", FormMethod.Post, new { enctype = "multipart/form-data" }))
{

    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <div class="row-fluid">
        <div class="span12">
            <h2 class="dog-title">@Html.DisplayFor(model => model.Name)</h2>
        </div>
    </div>
    
    <!-- First row -->  
    <div class="row-fluid">
        <div class="span12"></div>
    </div>
    
    <div class="row-fluid">
        <!--first row left - first column-->
        <div class="span6">
            <h4>Ownership</h4>
            <div class="thumbnail edit-dog">
                <div class="row-fluid">
                    <div class="span6">
                        <!--HERE WE NEED A TYPE AHEAD LIST-->
                        <label>Owner:</label>
                        @Html.TextBox("Owner", (string)ViewBag.Owner, new { placeholder = "Owner name", @id = "Owner_typeahead" })
                        @Html.HiddenFor(model => model.PersonId, new { @id = "returnOwnerId" })
                        <div>
                            @Html.ActionLink("Create Owner", "CreateOwner", "Person", null, new { id = "btnCreate", @class = "btn btn-success" })
                        </div>
                        <br>
                        <div id='dialogDiv' class='modal hide fade in'>
                            <div id='dialogContent'></div>
                        </div>
                        <div class="editor-label">
                            New Registration number
                        <a href="#" id="newreg" class="btn-mini btn-warning" rel="popover" data-content="If the dog has moved to another country he sometimes gets a new registration number. This number can be saved here" data-original-title="New Reg Nr.">i</a>
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.NewReg)
                            @Html.ValidationMessageFor(model => model.NewReg)
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!--second row right - first column-->
        <div class="span6">
            <h4>Original Data</h4>
            <div class="thumbnail edit-dog">
                <div class="row-fluid">
                    <div class="span6">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Name)
                            @Html.HiddenFor(model => model.LitterId)
                        </div>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.Name)
                        </div>
                    </div>

                    <div class="editor-label">
                        @Html.LabelFor(model => model.Reg)
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.Reg)
                    </div>
                    <br />
                    <br />

                    <div class="row-fluid">
                        <div class="span6">
                            <div class="editor-label">
                                Date of birth  
                            </div>
                            <br />
                            <div class="editor-field">
                                <b>@Html.TextBoxFor(model => model.Litter.DateOfBirth,  "{0:dd-MM-yyyy}")</b>
                            </div>
                        </div>
                        <div class="editor-label">
                            Born in
                        </div>
                        <br />
                        <div class="editor-field">
                            <b>@Html.TextBoxFor(model => model.BornInCountry.Name, new { @readonly = "readonly" })</b>
                        </div>
                        @Html.HiddenFor(model => model.Sex)
                        @Html.HiddenFor(model => model.BornInCountryId)
                    </div>
                </div>
            </div>
        </div>

        <div class="row-fluid">
            <div class="span12">
            </div>
        </div>
        <div class="row-fluid">
            <!--second row left - first column-->
            <div class="span6">
                <h4>Health & Appearance</h4>
                <div class="thumbnail edit-dog">
                    <div class="row-fluid">
                        <div class="span6">
                            <div class="editor-label">
                                HD
                        <a href="#" id="hd" class="btn-mini btn-warning" rel="popover" data-content="If the dog has been x-rayed for hip dysplasia, HD state it here." data-original-title="HD:">i</a>
                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;HD2
                        <a href="#" id="hd2" class="btn-mini btn-warning" rel="popover" data-content="If the dog have had another HD value state it here" data-original-title="HD2:">i</a>
                            </div>
                            <div class="editor-field">
                                @Html.TextBoxFor(model => model.HD, new { style = "width: 92px" }) @Html.TextBoxFor(model => model.HD2, new { style = "width: 92px;" })
                                @Html.ValidationMessageFor(model => model.HD)
                                @Html.ValidationMessageFor(model => model.HD2)
                            </div>
                            <div class="editor-label">
                                Inbreeding
                        <a href="#" id="inbreeding" class="btn-mini btn-warning" rel="popover" data-content="You can put the result of the inbreeding calculation here. Many dogs has a calculation iported to the system(calculated elsewhere)" data-original-title="Inbreeding:">i</a>
                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Size
                        <a href="#" id="size" class="btn-mini btn-warning" rel="popover" data-content="Please enter the size of the dog in centimeters" data-original-title="Size:">i</a>
                            </div>
                            <div class="editor-field">
                                @Html.TextBoxFor(model => model.Inbreeding, new { style = "width: 92px;", placeholder = "%" }) @Html.TextBoxFor(model => model.Size, new { style = "width: 92px", placeholder = "Centimeters" })
                                @Html.ValidationMessageFor(model => model.Inbreeding)
                            </div>
                            <div class="editor-label">Eyes</div>
                            <div class="editor-field">
                                @Html.EditorFor(model => model.Eyes)
                                @Html.ValidationMessageFor(model => model.Eyes).
                            </div>
                            <div class="editor-label">Dew Claws</div>
                            <div class="editor-field">
                              @Html.DropDownListFor(model => model.MT, new SelectList(new List<Object>{ 
                                  new {value = "", text = ""},
                                  new { value = "Double" , text = "Double"  },
                                  new { value = "Single" , text = "Single" },
                                  new { value = "None" , text = "None"}
                            },
                            "value",
                            "text",
                           Model.MT)
                          )
                                @Html.ValidationMessageFor(model => model.MT)
                            </div>
                            <div class="editor-label">
                                Sex
                                <a href="#" id="sex" class="btn-mini btn-warning" rel="popover" data-content="Only if the gender need to be corrected" data-original-title="Hair:">i</a>
                            </div>
                            <div class="editor-field">
                                @Html.EditorFor(model => model.Sex)
                                @Html.ValidationMessageFor(model => model.Sex)
                            </div>
                        </div>
                        <!--second row left - second column-->
                        <div class="span6">
                            <div class="editor-label">Color-Group
                            <a href="#" id="color" class="btn-mini btn-warning" rel="popover" data-content="Choose the best fitting for the main color of the dog" data-original-title="Color:">i</a></div> 
                            <div class="editor-field">
                                @Html.DropDownList("ColorId", String.Empty)
                                @Html.ValidationMessageFor(model => model.ColorId)
                            </div>

                            <div class="editor-label">
                                Color
                            </div>
                            <div class="editor-field">
                                @Html.TextAreaFor(model => model.ColorComment, new { style = "height: 50px;" })
                                @Html.ValidationMessageFor(model => model.ColorComment)
                                <div class="editor-label">
                                    Comment
                        <a href="#" id="comment" class="btn-mini btn-warning" rel="popover" data-content="Here you can mention any additional data you have about the dog" data-original-title="Comment:">i</a>
                                </div>
                                <div class="editor-field">
                                    @Html.TextAreaFor(model => model.Comment, new { style = "height: 80px;" })
                                    @Html.ValidationMessageFor(model => model.Comment)
                                </div>

                               
                               
                                <div class="editor-label">
                                    Hair
                        <a href="#" id="hair" class="btn-mini btn-warning" rel="popover" data-content="Please state here if the dog has long or short hair" data-original-title="Hair:">i</a>
                                </div>
                                <div class="editor-field">

                                    @Html.EditorFor(model => model.Hair)
                                    @Html.ValidationMessageFor(model => model.Hair)
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
            <div class="span6">
                <!--first row right - first column-->
                <h4>Photo</h4>
                <div class="thumbnail edit-dog">
                    <div class="row-fluid">
                        <div class="span4">

                            <p>Current Photo
                            <a href="#" id="photo" class="btn-mini btn-warning" rel="popover" data-content="Please use photos that are in landscape format, upright photos will be smaller to fit into our background
                                Keep in mind, that it shouldn´t be larger than 2 MB" data-original-title="Upload Photo:">i</a>
                            </p>
                            @if (@Model.PicturePath == null)
                            {
                                <img src="~/Images/dogs/dog2.jpg" alt ="photo missing" style = "margin-left:10px"/>     
                            }
                            else
                            {                           
                                <img src="@Url.Content(@Model.PicturePath)" alt ="@Html.DisplayFor(model => model.Name)" style="margin-left: 15px" />                            
                            }
                        </div>
                        <div class="span12">
                        </div>
                        <div class="span12">
                            <!--first row right - first column-->
                            @Html.HiddenFor(model => model.PicturePath)
                            <div class="input-group">
                                <span class="input-group-btn">
                                    <span class="btn btn-success btn-file">Change Photo<input type="file" name="file">
                                    </span>
                                    <input type="text" class="form-control" id="disabledInput" placeholder="New Photo's Name" style="margin-bottom: 0" disabled></span>
                                <button type="reset" class="btn btn-warning cancel"><span>Cancel upload</span></button>

                            </div>
                       </div>
                   </div>
                </div>
            </div>
        </div>
    </div>
    <br>    
    <p>
        <input type="submit" class="btn btn-primary" value="Save all" />
    </p>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script type="text/javascript" src="~/scripts/DogEdit.js"></script>

<script>
    (function (i, s, o, g, r, a, m) { i['GoogleAnalyticsObject'] = r; i[r] = i[r] || function () { (i[r].q = i[r].q || []).push(arguments) }, i[r].l = 1 * new Date(); a = s.createElement(o), m = s.getElementsByTagName(o)[0]; a.async = 1; a.src = g; m.parentNode.insertBefore(a, m) })(window, document, 'script', '//www.google-analytics.com/analytics.js', 'ga');

    ga('create', 'UA-45948404-1', '85.220.79.130'); ga('send', 'pageview');

</script>
