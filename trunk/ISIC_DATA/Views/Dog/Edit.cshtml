@using BootstrapSupport
@model ISIC_DATA.Models.Dog

@{
    ViewBag.Title = "Edit Dog";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

@using (Html.BeginForm("Edit", "Dog", FormMethod.Post, new { enctype = "multipart/form-data" }))
{

    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <div class="row-fluid">
        <div class="span12">
                <h2 class="dogTitle">@Html.DisplayFor(model => model.Name)</h2>
         </div>
    </div>
    
    <div class="row-fluid">
            <div class="span12"> </div>
        </div>

        <div class="row-fluid">
        <!--second row left - first column-->
        <div class="span6">
            <h4>Health & Appearance</h4>
            <div class="thumbnail edit-dog">
                <div class="row-fluid">
                    <div class="span6">
                        <div class="editor-label">HD
                        <a href="#" id="hd" class="btn-mini btn-warning" rel="popover" data-content="This is the most common health information for the Icelandic Sheepdog. Please use your country...." data-original-title="HD:">i</a>
                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;HD2
                        <a href="#" id="hd2" class="btn-mini btn-warning" rel="popover" data-content="This is the most common health information for the Icelandic Sheepdog. Please use your country...." data-original-title="HD:">i</a>
                        </div>
                        <div class="editor-field">
                        @Html.TextBoxFor(model => model.HD,new {style="width: 80px;" } )
                        @Html.ValidationMessageFor(model => model.HD)
                        @Html.TextBoxFor(model => model.HD2,new {style="width: 80px;" } )
                        @Html.ValidationMessageFor(model => model.HD2)    
                       </div>
                        <div class="editor-label">Inbreeding
                        <a href="#" id="inbreeding" class="btn-mini btn-danger" rel="popover" data-content="You can put the result of the inbreeding calculation here. Manu dogs has a calculation iported to the system(calculated elsewhere)" data-original-title="Inbreeding:">i</a>
                        </div>
                        <div class="editor-field">
                        @Html.EditorFor(model => model.Inbreeding)
                        @Html.ValidationMessageFor(model => model.Inbreeding)
                        </div>
                        <div class="editor-label">Eyes</div>
                        <div class="editor-field">
                        @Html.EditorFor(model => model.HD)
                        @Html.ValidationMessageFor(model => model.HD)
                        </div>
                        <div class="editor-label">Eyes</div>      
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.MT)
                            @Html.ValidationMessageFor(model => model.MT)
                       </div>
                       <div class="editor-label">
                            Size
                        <a href="#" id="size" class="btn-mini btn-danger" rel="popover" data-content="Please enter the size of the dog in centemeters" data-original-title="Size:">i</a>
                        </div>
                        <div class="editor-field">
                           @Html.EditorFor(model => model.Size)
                           @Html.ValidationMessageFor(model => model.Size)
                        </div>
                    </div>
                    <!--second row left - second column-->
                    <div class="span6">
                        <div class="editor-label">Color</div>
                        <div class="editor-field">
                        @Html.DropDownList("ColorId", String.Empty)
                        @Html.ValidationMessageFor(model => model.ColorId)
                        </div>

                        <div class="editor-label">
                        @Html.LabelFor(model => model.ColorComment)
                        </div>
                        <div class="editor-field">
                        @Html.TextBoxFor(model => model.ColorComment, new { style = "height: 50px;" })
                        @Html.ValidationMessageFor(model => model.ColorComment)
                        <div class="editor-label"> Comment</div>
                        <div class="editor-field">
                        @Html.TextBoxFor(model => model.Comment, new { style = "height: 80px;" })
                        @Html.ValidationMessageFor(model => model.Comment)
                        </div>
                        <div class="editor-label">Hair
                        <a href="#" id="hair" class="btn-mini btn-danger" rel="popover" data-content="Please state here if the dog  long or short hair" data-original-title="Hair:">i</a>
                        </div>
                        <div class="editor-field">
                        @Html.EditorFor(model => model.Hair)
                        @Html.ValidationMessageFor(model => model.Hair)
                        
                    </div>
                    </div>
                </div>
            </div>
         </div>
        </div>
         <!--second row right - first column-->
        <div class="span6">
            <h4>Original Data</h4>
                <div class="thumbnail edit-dog">
                      <div class="editor-label">
                        @Html.LabelFor(model => model.Name)
                        @Html.HiddenFor(model => model.LitterId)
                    </div>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.Name)
                        @Html.ValidationMessageFor(model => model.Name)
                    </div>
                    <div class="controls bootstrap-timepicker">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Reg)
                    </div>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.Reg)
                        @Html.ValidationMessageFor(model => model.Reg)
                    </div>
                   
                   
                    <div class="editor-label">Gender</div>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.Sex)
                        @Html.ValidationMessageFor(model => model.Sex)
                    </div>
                    <div class="editor-label">Born in</div>
                    <div class="editor-field">
                        @Html.DropDownList("CountryId", String.Empty)
                        @Html.ValidationMessageFor(model => model.BornInCountryId)
                    </div>

                     <!-- From Littertable, modification dangerous -->  
                <!--    <div class="editor-label">Birthdate</div>
                    <div class="editor-field">
                        Html.EditorFor(model => model.Litter.DateOfBirth)
                        Html.ValidationMessageFor(model => model.Litter.DateOfBirth)
                    </div>
                    <div class="editor-label">Breeder</div>
                    <div class="editor-field">
                        Html.EditorFor(model => model.Litter.Person.Name)
                        Html.ValidationMessageFor(model => model.Litter.Person.Name)
                    </div>
                -->
                </div>
        </div>
                </div>
            </div>


    
    
        <div class="row-fluid">
        <!--first row left - first column-->
        <div class="span6">
            <h4>Ownership</h4>
            <div class="thumbnail edit-dog">
                <div class="row-fluid">
                    <div class="span6">
                        <!--HERE WE NEED A TYPE AHEAD LIST-->
                   <!--     <div class="editor-label">Html.LabelFor(model => model.Person.Owner)</div>    
                        <div class="editor-field">    
                        Html.EditorFor(model => model.Person.Name)
                        Html.ValidationMessageFor(model => model.Person.Name)
                    
                        </div>
                    -->
                        <div class="editor-label">New Registration number
                        <a href="#" id="newreg" class="btn-mini btn-warning" rel="popover" data-content="If the dog has moved to another country he sometimes gets a new registration number. This number can be saved here" data-original-title="New Reg Nr.">i</a>
                        </div>
                        <div class="editor-field">
                        @Html.EditorFor(model => model.NewReg)
                        @Html.ValidationMessageFor(model => model.NewReg)
                        </div>
                    </div>
                    <!--first row left second column-->
                <!--    <div class="span6">
                         <div>Owner (should be read only here)<br />
                         Html.DisplayFor(model => model.Person.Name)
                         </div><br />
                        <div class="editor-label">Living in</div>
                        <div class="editor-field">
                        Html.DropDownList("CountryId", String.Empty)
                        Html.ValidationMessageFor(model => model.LivesInCountryId)
                    </div>
                    </div>
                -->
                </div>
            </div>
         </div>
        <div class="span6">
          <!--first row right - first column-->
            <h4>Photo</h4>
            <div class="thumbnail edit-dog">
                <div class="row-fluid">
                    <div class="span4">
                                
                        <p>Current Photo</p>
                            @if (@Model.PicturePath == null)
                            {
                                <img src="~/Images/dogs/dog2.jpg" alt ="photo missing" />     
                            }
                            else
                            {                           
                                 <img src="@Url.Content(@Model.PicturePath)" alt ="@Html.DisplayFor(model => model.Name)" />                            
                            }
                    </div>
                    <div class="span8">
                    <!--first row right - first column-->
                        <div class="uploadPhoto">
                        <div class="input-group-btn">
					  
                      
					     Select picture:<input type="file" name="file"  class="btn btn-primary btn-file">
					     <p><input type="text" class="form-control" readonly="true"></p>
					<!--    </div>
					        <p><input type="text" class="form-control" readonly="true"></p>
                                                           
                            <button type="submit" class="btn btn-primary" name="Submit" id="Submit">Upload</button>
                            <p><button type="reset" class="btn btn-warning cancel">Cancel upload</button></p>
                                  	                                    			
			            </div> -->
                    
                   </div>
                </div>
            </div>
         </div>
    </div>
   </div>
   </div>     

    
    
    
    
         
    <p>
        <input type="submit" value="Save" />
    </p>
    
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script>
$(function ()
{
    $("#newreg").popover({
        trigger: 'hover',
        'placement': 'top'
    });
    $("#hd").popover({
        trigger: 'hover',
        'placement': 'top'
    });
    $("#inbreeding").popover({
        trigger: 'hover',
        'placement': 'top'
    });
    $("#size").popover({
        trigger: 'hover',
        'placement': 'top'
    });
    $("#hair").popover({
        trigger: 'hover',
        'placement': 'top'
    });
    $("#inbreeding").popover({
        trigger: 'hover',
        'placement': 'top'
    });

});
</script>


<script type="text/javascript">
    $(document)
        .on('change', '.btn-file :file', function () {
            var input = $(this),
                numFiles = input.get(0).files ? input.get(0).files.length : 1,
                label = input.val().replace(/\\/g, '/').replace(/.*\//, '');
            input.trigger('fileselect', [numFiles, label]);
        });
    $(document).ready(function () {
        $('.btn-file :file').on('fileselect', function (event, numFiles, label) {
            var input = $(this).parents('.input-group').find(':text'),
					log = numFiles > 1 ? numFiles + ' files selected' : label;

            if (input.length) {
                input.val(log);
            } else {
                if (log) alert(log);
            }
        });
    });


</script>
   

