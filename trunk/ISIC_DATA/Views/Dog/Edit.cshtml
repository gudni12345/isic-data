@using BootstrapSupport
@model ISIC_DATA.Models.Dog

@{
    ViewBag.Title = "Edit Dog";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

@using (Html.BeginForm("Edit", "Dog", FormMethod.Post, new { enctype = "multipart/form-data" }))
{

    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <div class="row-fluid">
        <div class="span12">
                <h2 class="dogTitle">@Html.DisplayFor(model => model.Name)</h2>
         </div>
    </div>
    
    <div class="row-fluid">
    <div class="span12"> </div>
    </div>

        <div class="row-fluid">
        <!--second row left - first column-->
        <div class="span6">
            <h4>Health & Appearance</h4>
            <div class="thumbnail edit-dog">
                <div class="row-fluid">
                    <div class="span6">
                        <div class="editor-label">HD
                        <a href="#" id="hd" class="btn-mini btn-warning" rel="popover" data-content="This is the most common health information for the Icelandic Sheepdog. Please use your country...." data-original-title="HD:">i</a>
                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;HD2
                        <a href="#" id="hd2" class="btn-mini btn-warning" rel="popover" data-content="If the dog have had another HD value state it here" data-original-title="HD2:">i</a>
                        </div>
                        <div class="editor-field">
                        @Html.TextBoxFor(model => model.HD,new {style="width: 92px" } ) @Html.TextBoxFor(model => model.HD2,new {style="width: 92px;" } )
                        @Html.ValidationMessageFor(model => model.HD)
                        @Html.ValidationMessageFor(model => model.HD2)    
                       </div>
                        <div class="editor-label">Inbreeding
                        <a href="#" id="inbreeding" class="btn-mini btn-warning" rel="popover" data-content="You can put the result of the inbreeding calculation here. Many dogs has a calculation iported to the system(calculated elsewhere)" data-original-title="Inbreeding:">i</a>
                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Size
                        <a href="#" id="size" class="btn-mini btn-warning" rel="popover" data-content="Please enter the size of the dog in centimeters" data-original-title="Size:">i</a>
                        </div>
                        <div class="editor-field">
                         @Html.TextBoxFor(model => model.Inbreeding,new {style="width: 92px;" ,placeholder="%" } ) @Html.TextBoxFor(model => model.Size,new {style="width: 92px" ,placeholder="Centimeters"  })
                         @Html.ValidationMessageFor(model => model.Inbreeding)                
                        </div>
                        <div class="editor-label">Eyes</div>
                        <div class="editor-field">
                        @Html.EditorFor(model => model.Eyes)
                        @Html.ValidationMessageFor(model => model.Eyes).
                        </div>
                        <div class="editor-label">Dew Claws</div>      
                        <div class="editor-field">
                            @Html.DropDownListFor(model => model.MT, new SelectList( new List<Object>{ 
                                  new { value = 0 , text = "Double"  },
                                  new { value = 1 , text = "Single" },
                                  new { value = 2 , text = "None"}
                          },
                            "value",
                            "text",
                           Model.MT)
                          )
                            @Html.ValidationMessageFor(model => model.MT)
                       </div>
                                             
                    </div>
                    <!--second row left - second column-->
                    <div class="span6">
                        <div class="editor-label">Color-Group</div>
                        <div class="editor-field">
                        @Html.DropDownList("ColorId", String.Empty)
                        @Html.ValidationMessageFor(model => model.ColorId)
                        </div>

                        <div class="editor-label">
                        Color
                        </div>
                        <div class="editor-field">
                        @Html.TextAreaFor(model => model.ColorComment, new { style = "height: 50px;"  })
                        @Html.ValidationMessageFor(model => model.ColorComment)
                        <div class="editor-label"> Comment
                        <a href="#" id="comment" class="btn-mini btn-warning" rel="popover" data-content="Here you can mention any additional data you have about the dog" data-original-title="Comment:">i</a>
                        </div>
                        <div class="editor-field">
                        @Html.TextAreaFor(model => model.Comment, new { style = "height: 80px;" })
                        @Html.ValidationMessageFor(model => model.Comment)
                        </div>
                        <div class="editor-label">Hair
                        <a href="#" id="hair" class="btn-mini btn-warning" rel="popover" data-content="Please state here if the dog has long or short hair" data-original-title="Hair:">i</a>
                        </div>
                        <div class="editor-field">
                             
                        @Html.EditorFor(model => model.Hair)
                        @Html.ValidationMessageFor(model => model.Hair)
                        
                    </div>
                    </div>
                </div>
            </div>
 </div>
        
        </div>
       <div class="span6">
          <!--first row right - first column-->
            <h4>Photo</h4>
            <div class="thumbnail edit-dog">
                <div class="row-fluid">
                     <div class="span4">
                                
                        <p>Current Photo</p>
                            @if (@Model.PicturePath == null)
                            {
                                <img src="~/Images/dogs/dog2.jpg" alt ="photo missing" />     
                            }
                            else
                            {                           
                                 <img src="@Url.Content(@Model.PicturePath)" alt ="@Html.DisplayFor(model => model.Name)" style="margin-left: 15px" />                            
                            }
                     </div>
                     <div class="span12">
                     </div>
                     <div class="span12">
                     <!--first row right - first column-->
                             @Html.HiddenFor(model => model.PicturePath)                                                   
				             <div class="input-group">
					            <span class="input-group-btn">                                    
						            <span class="btn btn-success btn-file">
							         Change Photo<input type="file" name="file">
                                 </span>
					                <input type="text" class="form-control input-sm" placeholder="New Photo's Name" readonly="true" style="margin-bottom: 0"></span>
                                    <button type="reset" class="btn btn-warning cancel"><span>Cancel upload</span></button>
                                 
					            </div>

                          <!-- The loading indicator is shown during file processing -->
                             <span class="fileupload-loading"></span>
                    
                <!-- The global progress information -->
                <div class="span5 fileupload-progress fade">
                    <!-- The global progress bar -->
                    <div class="progress progress-success progress-striped active" role="progressbar" aria-valuemin="0" aria-valuemax="100">
                        <div class="bar" style="width:0%;"></div>
                    </div>
                    <!-- The extended global progress information -->
                    <div class="progress-extended">&nbsp;</div>
                </div>
            </div>
            <!-- The table listing the files available for upload/download -->
            <table role="presentation" class="table table-striped"><tbody class="files" data-toggle="modal-gallery" data-target="#modal-gallery"></tbody></table>
         </div>
      </div>
    </div>
 </div>
        <div class="row-fluid">
            <div class="span12">
            </div>
        </div>
    
        <div class="row-fluid">
        <!--first row left - first column-->
        <div class="span6">
            <h4>Ownership</h4>
            <div class="thumbnail edit-dog">
                <div class="row-fluid">
                    <div class="span6">
                        <!--HERE WE NEED A TYPE AHEAD LIST-->
                        <label>Owner:</label>              
                        @Html.TextBox("Owner",(string)ViewBag.Owner, new { placeholder="Owner name", @id="Owner_typeahead"})
                        @Html.HiddenFor(model => model.PersonId, new { @id = "returnOwnerId" })
                        <div>
                            @Html.ActionLink("Add to list", "CreateOwner", "Person", null, new { id = "btnCreate", @class = "btn btn-success" })
                        </div>
                        <br>
                        <div id='dialogDiv' class='modal hide fade in'>
                            <div id='dialogContent'></div>
                        </div>

                   <!--     <div class="editor-label">Html.LabelFor(model => model.Person.Owner)</div>    
                        <div class="editor-field">    
                        Html.EditorFor(model => model.Person.Name)
                        Html.ValidationMessageFor(model => model.Person.Name)
                    
                        </div>
                    -->
                        <div class="editor-label">New Registration number
                        <a href="#" id="newreg" class="btn-mini btn-warning" rel="popover" data-content="If the dog has moved to another country he sometimes gets a new registration number. This number can be saved here" data-original-title="New Reg Nr.">i</a>
                        </div>
                        <div class="editor-field">
                        @Html.EditorFor(model => model.NewReg)
                        @Html.ValidationMessageFor(model => model.NewReg)
                        </div>
                    </div>
                    <!--first row left second column-->
                <!--    <div class="span6">
                         <div>Owner (should be read only here)<br />
                         Html.DisplayFor(model => model.Person.Name)
                         </div><br />
                        <div class="editor-label">Living in</div>
                        <div class="editor-field">
                        Html.DropDownList("CountryId", String.Empty)
                        Html.ValidationMessageFor(model => model.LivesInCountryId)
                    </div>
                    </div>
                -->
                </div>
            </div>
         </div>
 
        <!--second row right - first column-->
        <div class="span6">
            <h4>Original Data</h4>
               <div class="thumbnail edit-dog">
                  <div class="row-fluid">
                    <div class="span6">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Name)
                        @Html.HiddenFor(model => model.LitterId)
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.Name, new { @readonly="readonly" })
                    </div>
                   </div>
                    
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Reg)
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.Reg,new { @readonly="readonly" })
                    </div>
                    <br /><br />

                      <div class="row-fluid">
                    <div class="span6">
                      <div class="editor-label">
                      Date of birth  
                      </div><br />
                     <div class="editor-field">                        
                        <b>@Html.TextBoxFor(model => model.Litter.DateOfBirth, new { @readonly="readonly" })</b>                        
                    </div>
                      </div>             
                    <div class="editor-label">
                        Born in
                    </div><br />
                    <div class="editor-field">
                        <b>@Html.TextBoxFor(model => model.BornInCountry.Name, new { @readonly="readonly" })</b>
                    </div>                    
                        @Html.HiddenFor(model => model.Sex)
                        @Html.HiddenFor(model => model.BornInCountryId)
                    
                 </div>     
           </div>
        </div>

   </div>
</div>
    <br>    
    <p>
        <input type="submit" class="btn btn-primary" value="Save all" />
    </p>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script>

    // Disable client date validation.  Browser regional setting could cause problems.
    $(function () {
        $.validator.methods["date"] = function (value, element) { return true; }
    });

$(function ()
{
    $("#newreg").popover({
        trigger: 'hover',
        'placement': 'top'
    });
    $("#hd").popover({
        trigger: 'hover',
        'placement': 'top'
    });
    $("#inbreeding").popover({
        trigger: 'hover',
        'placement': 'top'
    });
    $("#size").popover({
        trigger: 'hover',
        'placement': 'top'
    });
    $("#hair").popover({
        trigger: 'hover',
        'placement': 'top'
    });
    $("#inbreeding").popover({
        trigger: 'hover',
        'placement': 'top'
    });
    $("#hd2").popover({
        trigger: 'hover',
        'placement': 'top'
    });
    $("#comment").popover({
        trigger: 'hover',
        'placement': 'top'
    });

});

    // Typeahead for the owner
$(document).ready(function () {
    $('#Owner_typeahead').typeahead({
        name: "Owner",
        remote: '/RegisterDog/FetchOwners?q=%QUERY',
        limit: 5,
        valueKey: "Name",
    }).on("typeahead:selected typeahead:autocompleted",
        function (e, datum) {
            $('#returnOwnerId').val(datum.Id);
        }
    );
});

//MODAL for adding owner
$(function () {
    $.ajaxSetup({ cache: false });
    $('#btnCreate').click(function () {                 // Open the Modal
        $('#dialogContent').load(this.href, function () {
            $('#dialogDiv').modal({
                backdrop: 'static',
                keyboard: true
            }, 'show');
            bindForm(this);
        });
        return false;
    });
});

function bindForm(dialog) {
    $('form', dialog).submit(function () {
        $.ajax({
            url: this.action,
            type: this.method,
            data: $(this).serialize(),
            success: function (result) {
                if (result.success) {           // if data was saved successfully we close the modal.
                    $('#dialogDiv').modal('hide');
                    //Refresh: location.reload();

                } else {
                    $('#dialogContent').html(result);
                    bindForm();
                }
            }
        });
        return false;
    });
}
        // Uploading picture
    $(document)
        .on('change', '.btn-file :file', function () {
            var input = $(this),
                numFiles = input.get(0).files ? input.get(0).files.length : 1,
                label = input.val().replace(/\\/g, '/').replace(/.*\//, '');
            input.trigger('fileselect', [numFiles, label]);
        });
    $(document).ready(function () {
        $('.btn-file :file').on('fileselect', function (event, numFiles, label) {
            var input = $(this).parents('.input-group').find(':text'),
					log = numFiles > 1 ? numFiles + ' files selected' : label;

            if (input.length) {
                input.val(log);
            } else {
                if (log) alert(log);
            }
        });
    });
</script>

<!-- The template to display files available for upload -->
        <script id="template-upload" type="text/x-tmpl">
        {% for (var i=0, file; file=o.files[i]; i++) { %}
            <tr class="template-upload fade">
                <td>
                    <span class="preview"></span>
                </td>
                <td>
                    <p class="name">{%=file.name%}</p>
                    {% if (file.error) { %}
                        <div><span class="label label-important">Error</span> {%=file.error%}</div>
                    {% } %}
                </td>
                <td>
                    <p class="size">{%=o.formatFileSize(file.size)%}</p>
                    {% if (!o.files.error) { %}
                        <div class="progress progress-success progress-striped active" role="progressbar" aria-valuemin="0" aria-valuemax="100" aria-valuenow="0"><div class="bar" style="width:0%;"></div></div>
                    {% } %}
                </td>
                <td>
                    {% if (!o.files.error && !i && !o.options.autoUpload) { %}
                        <button class="btn btn-primary start">
                            <i class="icon-upload icon-white"></i>
                            <span>Start</span>
                        </button>
                    {% } %}
                    {% if (!i) { %}
                        <button class="btn btn-warning cancel">
                            <i class="icon-ban-circle icon-white"></i>
                            <span>Cancel</span>
                        </button>
                    {% } %}
                </td>
            </tr>
        {% } %}
        </script>
   
       <!-- The template to display files available for download -->
        <script id="template-download" type="text/x-tmpl">
        {% for (var i=0, file; file=o.files[i]; i++) { %}
            <tr class="template-download fade">
                <td>
                    <span class="preview">
                        {% if (file.thumbnail_url) { %}
                            <a href="{%=file.url%}" title="{%=file.name%}" data-gallery="gallery" download="{%=file.name%}"><img src="{%=file.thumbnail_url%}"></a>
                        {% } %}
                    </span>
                </td>
                <td>
                    <p class="name">
                        <a href="{%=file.url%}" title="{%=file.name%}" data-gallery="{%=file.thumbnail_url&&'gallery'%}" download="{%=file.name%}">{%=file.name%}</a>
                    </p>
                    {% if (file.error) { %}
                        <div><span class="label label-important">Error</span> {%=file.error%}</div>
                    {% } %}
                </td>
                <td>
                    <span class="size">{%=o.formatFileSize(file.size)%}</span>
                </td>
                <td>
                    <button class="btn btn-danger delete" data-type="{%=file.delete_type%}" data-url="{%=file.delete_url%}"{% if (file.delete_with_credentials) { %} data-xhr-fields='{"withCredentials":true}'{% } %}>
                        <i class="icon-trash icon-white"></i>
                        <span>Delete</span>
                    </button>
                    <input type="checkbox" name="delete" value="1" class="toggle">
                </td>
            </tr>
        {% } %}
        </script>    

<script>
    (function (i, s, o, g, r, a, m) { i['GoogleAnalyticsObject'] = r; i[r] = i[r] || function () { (i[r].q = i[r].q || []).push(arguments) }, i[r].l = 1 * new Date(); a = s.createElement(o), m = s.getElementsByTagName(o)[0]; a.async = 1; a.src = g; m.parentNode.insertBefore(a, m) })(window, document, 'script', '//www.google-analytics.com/analytics.js', 'ga');

    ga('create', 'UA-45948404-1', '85.220.79.130'); ga('send', 'pageview');

</script>
