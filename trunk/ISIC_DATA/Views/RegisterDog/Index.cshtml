@model ISIC_DATA.Models.DogViewModel

@{
    ViewBag.Title = "Register dogs";
    Layout = "~\\Views\\Shared\\_Layout.cshtml";
}

<h2>Register Dog(s)</h2>

@using (Html.BeginForm())
{
    <fieldset>
        <legend>Litter details</legend>
        <span class="editor-label">
            @Html.LabelFor(model => model.Litter.DateOfBirth)
        </span>
        <span class="editor-field">
            @Html.TextBoxFor(model => model.Litter.DateOfBirth, new { @class = "datePicker", data_bind = "value: birth" })
        </span>

        <div class="editor-label">
            @Html.LabelFor(model => model.Litter.MotherId, "Mother")
        </div>
        <div class="editor-field">
            @Html.DropDownListFor( model => model.Litter.MotherId, (SelectList)ViewBag.MotherId)
            @Html.ValidationMessageFor(model => model.Litter.MotherId)
        </div>

           <div class="editor-label">
            @Html.LabelFor(model => model.Litter.FatherId, "Father")
        </div>
        <div class="editor-field">
            @Html.DropDownListFor( model => model.Litter.FatherId, (SelectList)ViewBag.FatherId)
            @Html.ValidationMessageFor(model => model.Litter.FatherId)
        </div>

    </fieldset>
    <fieldset>
        <legend>Dogs</legend>
        @Html.EditorFor(model => model.Dogs)
        <button data-bind="click: addPosition">Add one</button>
        <button data-bind="click: removePosition">Remove one</button>
    </fieldset>
    <input type="Submit" value="save"/>
}
<script type="text/javascript">

    $(function () {
        $('.datePicker').datepicker();
    });

    function createViewModel() {

        var createPosition = function () {
            return {
                name: ko.observable(),
                reg: ko.observable(),
                sex: ko.observable(),
                colorId: ko.observable()
            };
        };

        var addPosition = function () {
            positions.push(createPosition());
        };

        var removePosition = function () {
            positions.pop();
        };

        var birth = ko.observable();        
        var positions = ko.observableArray([createPosition()]);

        return {
            birth: birth,            
            positions: positions,
            addPosition: addPosition,
            removePosition: removePosition
        };

    }

    $(document).ready(function () {
        var viewModel = createViewModel();
        ko.applyBindings(viewModel);
    });

</script>

