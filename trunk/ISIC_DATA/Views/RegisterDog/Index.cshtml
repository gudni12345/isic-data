@using BootstrapSupport
@model ISIC_DATA.Models.DogViewModel

@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    ViewBag.Title = "Register Dog";
    Html.EnableClientValidation(false);
}

<h2>Register Dog(s)</h2>
<!-- Styles.Render("~/Content/typeahead.js-bootstrap.css")  -->

@if (ViewData.ModelState.Keys.Any(k=> ViewData.ModelState[k].Errors.Count() > 0)) { 
	<div class="alert alert-danger">
		<button class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
		@Html.ValidationSummary(false, "Errors: ")
	</div>
}

@using (Html.BeginForm(new { @class = "form-horizontal span9" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    <legend>Litter</legend>
    <fieldset>
        <div class="control-group">
            <div class="controls">

                <b>@Html.Label("Date of birth:", new { @class = "control-label" }) </b>
                @Html.TextBoxFor(model => model.Litter.DateOfBirth, new { @class = "datePicker", data_bind = "value: birth" })

                <label>Breeder:</label>              
                @Html.TextBoxFor(model => model.Litter.Person.Name, new { placeholder="Breeder name", @id="Breeder_typeahead"})
                @Html.HiddenFor(model => model.Litter.PersonId, new { @id = "returnBreederId" })
                @Html.ActionLink("Add", "CreateBreeder", "Person", null, new { id = "btnCreate", @class = "btn btn-success" })

                <div id='dialogDiv' class='modal hide fade in'>
                    <div id='dialogContent'></div>
                </div>

                <label>Father:</label>
                <div class="CustomTemplate">
                    @Html.TextBoxFor(model => model.Litter.Father.Reg, new { placeholder="Father's Reg", id="typeaheadFather" })                                
                    @Html.HiddenFor(model => model.Litter.FatherId, new { @id = "returnFatherId" })
                    @Html.TextBoxFor(model => model.Litter.Father.Name, new { id = "fatherName", disabled = "disabled"})                  
                </div>

                <label>Mother:</label>
                <div class="CustomTemplate">
                    @Html.TextBoxFor(model => model.Litter.Mother.Reg, new {placeholder="Mother's Reg", id="typeaheadMother" })                    
                    @Html.HiddenFor(model => model.Litter.MotherId, new { @id = "returnMotherId" })
                    @Html.TextBoxFor(model => model.Litter.Mother.Name, new { id="motherName", disabled = "disabled"})
                </div>
            </div>
        </div>


    </fieldset>


	<fieldset>
		<legend>Dogs</legend>
		@Html.EditorFor(model => model.Dogs)

		<button class="btn btn-success" data-bind="click: addPosition">Add one</button>
		<button class="btn btn-danger" data-bind="click: removePosition">Remove one</button>
	</fieldset>        
	
	<div class="form-actions">
		<button type="submit" class="btn btn-primary">Save changes</button>
		@Html.ActionLink("Cancel", "../Home/Index", null, new { @class = "btn " })
	</div>
   
} <!-- end form -->

@if (ViewData["Error"] != null)
{
	<div class="alert alert-error"> @ViewData["Error"].ToString()</div>
}
@if (TempData["Success"] != null)
{
	<div class="alert alert-success">@TempData["Success"].ToString()</div>
}

<script type="text/javascript" src="../scripts/hogan-2.0.0.js"></script>


@section scripts{ <script src="~/Scripts/Registerdog.js"></script> }

